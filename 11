

USE master;
GO

CREATE TRIGGER trg_CaptureAlterDB
ON ALL SERVER
FOR ALTER_DATABASE
AS
BEGIN
    DECLARE @data XML = EVENTDATA();
    INSERT INTO AuditDB.dbo.AlterDB_Log
    (
        EventType,
        DatabaseName,
        LoginName,
        HostName,
        CommandText,
        EventTime
    )
    VALUES
    (
        @data.value('(/EVENT_INSTANCE/EventType)[1]', 'NVARCHAR(100)'),
        @data.value('(/EVENT_INSTANCE/DatabaseName)[1]', 'NVARCHAR(100)'),
        SYSTEM_USER,
        HOST_NAME(),
        @data.value('(/EVENT_INSTANCE/TSQLCommand/CommandText)[1]', 'NVARCHAR(MAX)'),
        GETDATE()
    );
END;
GO


--------------------------------------------------------------------------------------------------
-- Find location of the default trace
DECLARE @path NVARCHAR(260);
SELECT @path = path FROM sys.traces WHERE is_default = 1;

-- Check ALTER DATABASE events
SELECT 
    te.name AS EventName,
    t.DatabaseName,
    t.ObjectName,
    t.TextData,
    t.LoginName,
    t.HostName,
    t.ApplicationName,
    t.StartTime
FROM sys.fn_trace_gettable(@path, DEFAULT) t
JOIN sys.trace_events te ON t.EventClass = te.trace_event_id
WHERE te.name = 'Object:Altered'
  AND t.TextData LIKE '%READ_COMMITTED_SNAPSHOT%'
  AND t.DatabaseName = 'YourDatabaseName'
ORDER BY t.StartTime DESC;



------------------------------------------------------------------------------------------
SELECT
    r.session_id,
    r.status,
    r.start_time,
    DATEDIFF(SECOND, r.start_time, GETDATE()) AS duration_seconds,
    r.cpu_time,
    r.total_elapsed_time,
    r.logical_reads,
    r.writes,
    r.granted_query_memory,
    r.query_plan_hash,
    t.text AS sql_text,
    s.login_name,
    s.host_name
FROM sys.dm_exec_requests r
JOIN sys.dm_exec_sessions s ON r.session_id = s.session_id
CROSS APPLY sys.dm_exec_sql_text(r.sql_handle) t
WHERE r.granted_query_memory > 0
ORDER BY r.granted_query_memory DESC;
