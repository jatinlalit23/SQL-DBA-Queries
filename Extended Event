ðŸ“¦ Step 1: Create Combined Extended Event Session
-- Drop the existing session if it exists
IF EXISTS (SELECT * FROM sys.server_event_sessions WHERE name = 'Track_Login_DB_Response')
BEGIN
    DROP EVENT SESSION [Track_Login_DB_Response] ON SERVER;
END
GO

-- Create a new Extended Event session
CREATE EVENT SESSION [Track_Login_DB_Response] ON SERVER 
ADD EVENT sqlserver.login(
    ACTION(
        sqlserver.client_app_name,
        sqlserver.client_hostname,
        sqlserver.username,
        sqlserver.nt_username,
        sqlserver.server_principal_name,
        sqlserver.session_id,
        sqlserver.database_name
    )
),
ADD EVENT sqlserver.logout(
    ACTION(
        sqlserver.client_app_name,
        sqlserver.client_hostname,
        sqlserver.username,
        sqlserver.nt_username,
        sqlserver.server_principal_name,
        sqlserver.session_id,
        sqlserver.database_name
    )
),
ADD EVENT sqlserver.sql_batch_completed(
    ACTION(
        sqlserver.client_app_name,
        sqlserver.client_hostname,
        sqlserver.username,
        sqlserver.nt_username,
        sqlserver.server_principal_name,
        sqlserver.session_id,
        sqlserver.database_name,
        sqlserver.sql_text
    )
    WHERE (duration > 1000000) -- Queries taking longer than 1 second
),
ADD EVENT sqlserver.rpc_completed(
    ACTION(
        sqlserver.client_app_name,
        sqlserver.client_hostname,
        sqlserver.username,
        sqlserver.nt_username,
        sqlserver.server_principal_name,
        sqlserver.session_id,
        sqlserver.database_name,
        sqlserver.sql_text
    )
    WHERE (duration > 1000000) -- RPCs taking longer than 1 second
)
ADD TARGET package0.event_file
(
    SET filename=N'C:\XE\Track_Login_DB_Response.xel',
        max_file_size=(50),
        max_rollover_files=(5)
);
GO

-- Start the event session
ALTER EVENT SESSION [Track_Login_DB_Response] ON SERVER STATE = START;
GO


***********************************************************************

-- Drop the session if it already exists
IF EXISTS (SELECT * FROM sys.server_event_sessions WHERE name = 'CaptureLoginEvents')
BEGIN
    DROP EVENT SESSION CaptureLoginEvents ON SERVER;
END

-- Create the Extended Event session
CREATE EVENT SESSION CaptureLoginEvents
ON SERVER
ADD EVENT sqlserver.login(
    ACTION(sqlserver.sql_text, sqlserver.client_app_name, sqlserver.database_name, sqlserver.session_id)
),
ADD EVENT sqlserver.sql_statement_completed(
    ACTION(sqlserver.sql_text, sqlserver.database_id, sqlserver.session_id)
)
ADD TARGET package0.event_file(SET filename = 'C:\Temp\CaptureLoginEvents.xel')
WITH (MAX_MEMORY = 4096 KB, EVENT_RETENTION_MODE = ALLOW_SINGLE_EVENT_LOSS, MAX_DISPATCH_LATENCY = 30 SECONDS, MAX_EVENT_SIZE = 0, MEMORY_PARTITION_MODE = NONE);

-- Start the event session
ALTER EVENT SESSION CaptureLoginEvents ON SERVER STATE = START;
***********************************

-- Drop the session if it already exists
IF EXISTS (SELECT * FROM sys.server_event_sessions WHERE name = 'CaptureUserEvents')
BEGIN
    DROP EVENT SESSION CaptureUserEvents ON SERVER;
END

-- Create the Extended Event session
CREATE EVENT SESSION CaptureUserEvents
ON SERVER
ADD EVENT sqlserver.login(
    ACTION(sqlserver.sql_text, sqlserver.client_app_name, sqlserver.database_name, sqlserver.session_id)
    WHERE sqlserver.username = 'sushil'
),
ADD EVENT sqlserver.sql_statement_completed(
    ACTION(sqlserver.sql_text, sqlserver.database_id, sqlserver.session_id)
    WHERE sqlserver.username = 'sushil'
)
ADD TARGET package0.event_file(SET filename = 'C:\Temp\CaptureUserEvents.xel')
WITH (MAX_MEMORY = 4096 KB, EVENT_RETENTION_MODE = ALLOW_SINGLE_EVENT_LOSS, MAX_DISPATCH_LATENCY = 30 SECONDS, MAX_EVENT_SIZE = 0, MEMORY_PARTITION_MODE = NONE);

-- Start the event session
ALTER EVENT SESSION CaptureUserEvents ON SERVER STATE = START;


**************************************************************************************************************************************************************


âœ… Step 2: Read the Data from This Combined Session
Ab jo session create hua hai uska query aap aise run karenge:

sql
Copy
Edit
;WITH EventData AS
(
    SELECT 
        event_data.value('(event/@timestamp)[1]', 'datetime2') AS [Timestamp],
        event_data.value('(event/@name)[1]', 'nvarchar(50)') AS [EventName],
        event_data.value('(event/action[@name="client_hostname"]/value)[1]', 'nvarchar(256)') AS [ClientHost],
        event_data.value('(event/action[@name="client_ip"]/value)[1]', 'nvarchar(256)') AS [ClientIP],
        event_data.value('(event/action[@name="client_app_name"]/value)[1]', 'nvarchar(256)') AS [AppName],
        event_data.value('(event/action[@name="nt_username"]/value)[1]', 'nvarchar(256)') AS [NTUser],
        event_data.value('(event/action[@name="username"]/value)[1]', 'nvarchar(256)') AS [SQLLogin],
        event_data.value('(event/action[@name="server_principal_name"]/value)[1]', 'nvarchar(256)') AS [ServerUser],
        event_data.value('(event/action[@name="auth_scheme"]/value)[1]', 'nvarchar(256)') AS [AuthScheme],
        event_data.value('(event/action[@name="database_name"]/value)[1]', 'nvarchar(256)') AS [Database],
        event_data.value('(event/action[@name="session_id"]/value)[1]', 'int') AS [SessionID],
        event_data.value('(event/data[@name="duration"]/value)[1]', 'bigint') AS [DurationMicroSec],
        event_data.value('(event/action[@name="sql_text"]/value)[1]', 'nvarchar(max)') AS [SQLText]
    FROM 
    (
        SELECT CAST(event_data AS XML) AS event_data
        FROM sys.fn_xe_file_target_read_file('C:\XE\Track_Login_DB_Response*.xel', NULL, NULL, NULL)
    ) AS x
)
SELECT 
    Timestamp,
    EventName,
    SQLLogin AS LoginUser,
    NTUser AS WindowsUser,
    ClientHost,
    ClientIP,
    AppName,
    ServerUser,
    AuthScheme,
    Database,
    SessionID,
    CASE WHEN DurationMicroSec IS NOT NULL THEN CAST(DurationMicroSec/1000 AS bigint) ELSE NULL END AS DurationMs,
    SQLText
FROM EventData
ORDER BY Timestamp DESC;

*****************************************************************************************************************************************************************
ðŸ”¥ Optional Filter You Can Add in Query:
âœ… Specific user filter:
sql
Copy
Edit
WHERE SQLLogin = 'myuser'
âœ… Specific date range:
sql
Copy
Edit
WHERE Timestamp >= '2025-05-09'
âœ… Only long queries (>5 sec):
sql
Copy
Edit
WHERE DurationMs > 5000

**************************************************************************************************************************************************************



**************************************************************************************************************************************************************

The event action name, "sqlserver.auth_scheme", is invalid, or the object could not be found
Msg 15151, Level 16, State 28, Line 61
Cannot alter the event session 'Track_Login_DB_Response', because it does not exist or you do not have permission.

**************************************************************************************************************************************************************



*******************************************************************************************************************************************************************
